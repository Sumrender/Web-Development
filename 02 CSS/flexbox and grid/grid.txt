http://cssgridgarden.com/

Level 1 to 3:
Using 
	grid-column-start: 1; and 
	grid-column-end: 3;
here 1 and 3 are vertical lines, in a square the vertical line numbers will be 1 and 2.

Level 4:
When pairing grid-column-start and grid-column-end, you might assume that the end 
value has to be greater than the start value. But this turns out not the case!

Level 5-6:
If you want to count grid lines from the right instead of the left, you can give grid-column-start 
and grid-column-end negative values. For example, you can set it to -1 to specify the first grid 
line from the right.

Level 7-9:
Instead of defining a grid item based on the start and end positions of the grid lines, you 
can define it based on your desired column width using the span keyword. Keep in mind
that span only works with positive values.

For example, water these carrots with the rule grid-column-end: span 2;.

Level 10:
Typing both grid-column-start and grid-column-end every time can get tiring. Fortunately, 
grid-column is a shorthand property that can accept both values at once, separated by a slash.

For example, grid-column: 2 / 4; will set the grid item to start on the 2nd vertical grid line and 
end on the 4th grid line.

Level 11-12:
We can also use span in shorthand notation
#water {
grid-column: 2/span 3;
}

Level 13-15 :
grid-row-start: 1;

Level 16-17:

If typing out both grid-column and grid-row is too much for you, there's yet another shorthand 
for that. 	               grid-area 		accepts four values separated by slashes: 
grid-row-start, grid-column-start, grid-row-end, followed by grid-column-end.

One example of this would be grid-area: 1 / 1 / 3 / 6;.

Level 18-21:

If grid items aren't explicitly placed with grid-area, grid-column, grid-row, etc., they are 
automatically placed according to their order in the source code. We can override this using 
the order property, which is one of the advantages of grid over table-based layout.

By default, all grid items have an order of 0, but this can be set to any positive or 
negative value, similar to z-index.

Right now, the carrots in the second column are being poisoned and the weeds in 
the last column are being watered. Change the order value of the poison to fix this right away!


Level 22:
	grid-template-columns: repeat(5, 1fr);

Level 27: 
	grid-template: rows / columns;

Level 28;
